{"version":3,"file":"static/js/572.870483fb.chunk.js","mappings":"4MACA,GAAgB,WAAa,OAAO,WAAa,UAAU,WAAa,UAAU,UAAY,wBAAwB,KAAO,mBAAmB,KAAO,mBAAmB,YAAY,wBAAwB,cAAc,0BAA0B,KAAO,oB,gBCGvPA,EAAKC,IAAAA,KAAgBC,EAAAA,GA6B3B,MAlBA,YAOwB,IANtBC,EAMqB,EANrBA,KACAC,EAKqB,EALrBA,cACAC,EAIqB,EAJrBA,KACAC,EAGqB,EAHrBA,MACAC,EAEqB,EAFrBA,QACAC,EACqB,EADrBA,UAEA,OACE,mBACEC,QAASL,EACTM,UAAWV,EAAGK,EAAMC,EAAO,CAAEC,QAASA,EAASC,UAAWA,IAF5D,SAIGL,KCvBDH,EAAKC,IAAAA,KAAgBC,GAqE3B,MAzDA,YAQqB,IAPnBS,EAOkB,EAPlBA,MACAC,EAMkB,EANlBA,SACAC,EAKkB,EALlBA,OACAC,EAIkB,EAJlBA,QACAC,EAGkB,EAHlBA,GACAC,EAEkB,EAFlBA,eACAC,EACkB,EADlBA,gBAEMC,GAAUC,EAAAA,EAAAA,QAAuB,MAWvC,OACE,iCACE,iBAAKL,QAASA,EAASJ,UAAWV,EAAG,eAArC,WACE,2BAAQW,KACR,cAAGE,OAAO,OAAOO,KAAK,OAAOC,SAAS,UAAUC,YAAY,IAA5D,UACE,iBACEC,GAAG,WACHV,OAAQA,EACRW,WAAW,4CACXC,WAAW,SACXb,SAAUA,EACVc,WAAW,SACXC,EAAE,MACFC,EAAE,MACFb,GAAIA,EACJc,IAAKX,EACLR,UAAWV,EAAG,kBAXhB,SAeGW,EAAMmB,MAAM,IAAIC,KAAI,SAACC,EAAcC,GAAf,OACnB,2BAA2BD,GAAfA,EAAOC,cAK3B,SAAC,EAAD,CACE9B,KAAI,mBAAcQ,EAAMuB,OAAO,GAAI,GAA/B,yBACJ9B,cAtCc,WAClB,IAAM+B,EAAUjB,EAAQkB,QACpBD,IACFA,EAAQE,MAAMC,QAAU,OACxBC,YAAW,WACTJ,EAAQE,MAAMC,QAAU,UACvB,KAiCDjC,KAAMW,EACNV,MAAOW,EACPV,SAAO,QC/DTP,EAAKC,IAAAA,KAAgBC,GAgD3B,MA9CA,WACE,OACE,iBAAKQ,UAAWV,EAAG,aAAnB,WACE,oBAASU,UAAWV,EAAG,QAAvB,UACE,SAAC,EAAD,CACEW,MAAO,6BACPC,SAAU,IACVC,OAAQX,EAAAA,WACRY,QAAS,eACTC,GAAI,OACJC,eAAgB,QAChBC,gBAAiB,YAGrB,oBAASP,UAAWV,EAAG,QAAvB,UACE,SAAC,EAAD,CACEW,MAAO,6BACPC,SAAU,GACVC,OAAQX,EAAAA,WACRY,QAAS,eACTC,GAAI,OACJC,eAAgB,QAChBC,gBAAiB,YAGrB,oBAASP,UAAWV,EAAG,QAAvB,UACE,SAAC,EAAD,CACEW,MAAO,6BACPC,SAAU,GACVC,OAAQX,EAAAA,WACRY,QAAS,eACTC,GAAI,OACJC,eAAgB,QAChBC,gBAAiB,YAGrB,qBAASP,UAAWV,EAAG,QAAvB,WACE,kBAAOU,UAAWV,EAAG,aAArB,sBACA,sCACA,sCACA","sources":["webpack://animation-playground/./src/pages/Main/index.module.scss?177d","components/DefaultButton.tsx","pages/Main/TypoGraphy.tsx","pages/Main/index.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"customGray\":\"#ccc\",\"customBlue\":\"#228be6\",\"customPink\":\"#f06595\",\"container\":\"Main_container__G7c9p\",\"main\":\"Main_main__cGQyR\",\"menu\":\"Main_menu__e0Upa\",\"menu-icon\":\"Main_menu-icon__jwArp\",\"typo-graphy\":\"Main_typo-graphy__9BP04\",\"draw\":\"Main_draw__7FUKG\"};","import React from 'react';\r\nimport styles from '../css/components.module.scss';\r\nimport classNames from 'classnames/bind';\r\n\r\nconst cx = classNames.bind(styles);\r\n\r\ntype DefaultButtonProps = {\r\n  name: string;\r\n  onClickButton: () => void;\r\n  size: 'large' | 'medium' | 'small';\r\n  color: 'blue' | 'pink' | 'gray';\r\n  fullWidth?: boolean;\r\n  outline?: boolean;\r\n};\r\n\r\nfunction DefaultButton({\r\n  name,\r\n  onClickButton,\r\n  size,\r\n  color,\r\n  outline,\r\n  fullWidth,\r\n}: DefaultButtonProps) {\r\n  return (\r\n    <button\r\n      onClick={onClickButton}\r\n      className={cx(size, color, { outline: outline, fullWidth: fullWidth })}\r\n    >\r\n      {name}\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default DefaultButton;\r\n","import React, { useRef } from 'react';\r\nimport classNames from 'classnames/bind';\r\nimport styles from './index.module.scss';\r\nimport DefaultButton from '../../components/DefaultButton';\r\n\r\nconst cx = classNames.bind(styles);\r\n\r\ntype TypeGraphyProps = {\r\n  title: string;\r\n  fontSize: number;\r\n  stroke: string;\r\n  viewBox: string;\r\n  dy: string;\r\n  restartBtnSize: 'large' | 'medium' | 'small';\r\n  restartBtnColor: 'blue' | 'pink' | 'gray';\r\n};\r\n\r\nfunction TypoGraphy({\r\n  title,\r\n  fontSize,\r\n  stroke,\r\n  viewBox,\r\n  dy,\r\n  restartBtnSize,\r\n  restartBtnColor,\r\n}: TypeGraphyProps) {\r\n  const textRef = useRef<SVGTextElement>(null);\r\n  const reAnimation = () => {\r\n    const element = textRef.current;\r\n    if (element) {\r\n      element.style.display = 'none';\r\n      setTimeout(() => {\r\n        element.style.display = 'block';\r\n      }, 0);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <svg viewBox={viewBox} className={cx('typo-graphy')}>\r\n        <title>{title}</title>\r\n        <g stroke='none' fill='none' fillRule='evenodd' fillOpacity='0'>\r\n          <text\r\n            id='typoText'\r\n            stroke={stroke}\r\n            fontFamily='PermanentMarker-Regular, Permanent Marker'\r\n            fontWeight='normal'\r\n            fontSize={fontSize}\r\n            textAnchor='middle'\r\n            x='50%'\r\n            y='50%'\r\n            dy={dy}\r\n            ref={textRef}\r\n            className={cx('typo-animation')}\r\n            // transform='translate(50%, 50%)'\r\n            // textDecoration='underline' underline | line-through\r\n          >\r\n            {title.split('').map((char: string, index: number) => (\r\n              <tspan key={char + index}>{char}</tspan>\r\n            ))}\r\n          </text>\r\n        </g>\r\n      </svg>\r\n      <DefaultButton\r\n        name={`ReStart [${title.slice(-3, -1)} ] 재실행`}\r\n        onClickButton={reAnimation}\r\n        size={restartBtnSize}\r\n        color={restartBtnColor}\r\n        outline\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default TypoGraphy;\r\n","import React from 'react';\r\nimport classNames from 'classnames/bind';\r\nimport styles from './index.module.scss';\r\nimport TypoGraphy from './TypoGraphy';\r\n\r\nconst cx = classNames.bind(styles);\r\n\r\nfunction Main() {\r\n  return (\r\n    <div className={cx('container')}>\r\n      <section className={cx('main')}>\r\n        <TypoGraphy\r\n          title={'Github@Taeyeon-Lim 1번'}\r\n          fontSize={100}\r\n          stroke={styles.customBlue}\r\n          viewBox={'0 0 1260 150'}\r\n          dy={'5rem'}\r\n          restartBtnSize={'large'}\r\n          restartBtnColor={'blue'}\r\n        />\r\n      </section>\r\n      <section className={cx('main')}>\r\n        <TypoGraphy\r\n          title={'Github@Taeyeon-Lim 2번'}\r\n          fontSize={80}\r\n          stroke={styles.customPink}\r\n          viewBox={'0 0 1260 150'}\r\n          dy={'5rem'}\r\n          restartBtnSize={'large'}\r\n          restartBtnColor={'pink'}\r\n        />\r\n      </section>\r\n      <section className={cx('main')}>\r\n        <TypoGraphy\r\n          title={'Github@Taeyeon-Lim 3번'}\r\n          fontSize={60}\r\n          stroke={styles.customGray}\r\n          viewBox={'0 0 1260 150'}\r\n          dy={'5rem'}\r\n          restartBtnSize={'large'}\r\n          restartBtnColor={'gray'}\r\n        />\r\n      </section>\r\n      <section className={cx('menu')}>\r\n        <aside className={cx('menu-icon')}>Soon...</aside>\r\n        <aside>ani_1</aside>\r\n        <aside>ani_2</aside>\r\n        <aside>ani_3</aside>\r\n      </section>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n"],"names":["cx","classNames","styles","name","onClickButton","size","color","outline","fullWidth","onClick","className","title","fontSize","stroke","viewBox","dy","restartBtnSize","restartBtnColor","textRef","useRef","fill","fillRule","fillOpacity","id","fontFamily","fontWeight","textAnchor","x","y","ref","split","map","char","index","slice","element","current","style","display","setTimeout"],"sourceRoot":""}