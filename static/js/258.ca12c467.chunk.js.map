{"version":3,"file":"static/js/258.ca12c467.chunk.js","mappings":"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","sources":["components/DefaultButton.tsx","pages/BounceBall/hook.tsx","pages/BounceBall/BounceCanvas.tsx","webpack://animation-playground/./src/pages/BounceBall/index.module.scss?7f27"],"sourcesContent":["import React from 'react';\r\nimport styles from '../css/components.module.scss';\r\nimport classNames from 'classnames/bind';\r\n\r\nconst cx = classNames.bind(styles);\r\n\r\nexport type restartBtnSize = 'large' | 'medium' | 'small';\r\nexport type restartBtnColor = 'blue' | 'pink' | 'gray' | 'froly' | 'concrete';\r\n\r\ntype DefaultButtonProps = {\r\n  name: string;\r\n  onClickButton: () => void;\r\n  size: restartBtnSize;\r\n  color: restartBtnColor;\r\n  fullWidth?: boolean;\r\n  outline?: boolean;\r\n};\r\n\r\nfunction DefaultButton({\r\n  name,\r\n  onClickButton,\r\n  size,\r\n  color,\r\n  outline,\r\n  fullWidth,\r\n}: DefaultButtonProps) {\r\n  return (\r\n    <button\r\n      onClick={onClickButton}\r\n      className={cx(size, color, { outline: outline, fullWidth: fullWidth })}\r\n    >\r\n      {name}\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default DefaultButton;\r\n","import {\r\n  useCallback,\r\n  useEffect,\r\n  useLayoutEffect,\r\n  useState,\r\n  RefObject,\r\n} from 'react';\r\n\r\n/** 캔버스 초기화 */\r\nexport const useResize = (canvasRef: RefObject<HTMLCanvasElement>) => {\r\n  const resize = useCallback(() => {\r\n    if (!canvasRef.current) return;\r\n    const canvas = canvasRef.current;\r\n    const ctx = canvas.getContext('2d');\r\n\r\n    if (ctx) {\r\n      canvas.width = canvas.clientWidth * 1;\r\n      canvas.height = canvas.clientHeight * 1;\r\n      ctx.scale(1, 1);\r\n    }\r\n  }, [canvasRef]);\r\n\r\n  useEffect(() => {\r\n    resize();\r\n  }, [resize]);\r\n};\r\n\r\n/** 공 그리기 타입 */\r\ntype UseDrawBallTypes = {\r\n  canvasRef: React.RefObject<HTMLCanvasElement>;\r\n  isPaused: boolean;\r\n  speed: number;\r\n  radius: number;\r\n};\r\ntype DrawBlockTypes = {\r\n  rectWidth: any;\r\n  rectHeight: any;\r\n  rectX: any;\r\n  rectY: any;\r\n  rectMaxX: any;\r\n  rectMaxY: any;\r\n  ctx: CanvasRenderingContext2D;\r\n};\r\n/** 공 그리기 */\r\nexport const useDrawBall = ({\r\n  canvasRef,\r\n  isPaused,\r\n  speed,\r\n  radius,\r\n}: UseDrawBallTypes) => {\r\n  const [frame, setFrame] = useState(0);\r\n  const [x, setX] = useState(100);\r\n  const [y, setY] = useState(100);\r\n  const [vx, setVx] = useState(speed);\r\n  const [vy, setVy] = useState(speed);\r\n\r\n  // 공의 스피드\r\n  useEffect(() => {\r\n    if (vx < 0) {\r\n      setVx(-speed);\r\n    } else {\r\n      setVx(speed);\r\n    }\r\n    if (vy < 0) {\r\n      setVy(-speed);\r\n    } else {\r\n      setVy(speed);\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [speed]);\r\n\r\n  // 블럭 생성\r\n  const drawBlock = ({\r\n    rectWidth,\r\n    rectHeight,\r\n    rectX,\r\n    rectY,\r\n    rectMaxX,\r\n    rectMaxY,\r\n    ctx,\r\n  }: DrawBlockTypes) => {\r\n    if (ctx) {\r\n      const xGap = 40;\r\n      const yGap = 25;\r\n\r\n      ctx.fillStyle = '#ff384e';\r\n      ctx.beginPath();\r\n      ctx.rect(rectX, rectY, rectWidth, rectHeight);\r\n      ctx.fill();\r\n\r\n      ctx.fillStyle = '#190f3a';\r\n      ctx.beginPath();\r\n      ctx.moveTo(rectMaxX, rectMaxY);\r\n      ctx.lineTo(rectMaxX - xGap, rectMaxY + yGap);\r\n      ctx.lineTo(rectX - xGap, rectMaxY + yGap);\r\n      ctx.lineTo(rectX, rectMaxY);\r\n      ctx.fill();\r\n\r\n      ctx.fillStyle = '#9d0919';\r\n      ctx.beginPath();\r\n      ctx.moveTo(rectX, rectY);\r\n      ctx.lineTo(rectX - xGap, rectY + yGap);\r\n      ctx.lineTo(rectX - xGap, rectMaxY + yGap);\r\n      ctx.lineTo(rectX, rectMaxY);\r\n      ctx.fill();\r\n    }\r\n  };\r\n\r\n  // 생성된 블럭에 닿으면 튕기기\r\n  type BounceBlock = {\r\n    rectX: number;\r\n    rectY: number;\r\n    rectMaxX: number;\r\n    rectMaxY: number;\r\n  };\r\n  const bounceBlock = ({ rectX, rectY, rectMaxX, rectMaxY }: BounceBlock) => {\r\n    const minX = rectX - radius;\r\n    const maxX = rectMaxX + radius;\r\n    const minY = rectY - radius;\r\n    const maxY = rectMaxY + radius;\r\n\r\n    if (minX < x && x < maxX && minY < y && y < maxY) {\r\n      const x1 = Math.abs(minX - x);\r\n      const x2 = Math.abs(x - maxX);\r\n      const y1 = Math.abs(minY - y);\r\n      const y2 = Math.abs(y - maxY);\r\n      const min1 = Math.min(x1, x2);\r\n      const min2 = Math.min(y1, y2);\r\n      const shockRectSide = Math.min(min1, min2);\r\n\r\n      if (shockRectSide === min1) {\r\n        setVx(vx * -1);\r\n        setX(x + vx * -1);\r\n      } else if (shockRectSide === min2) {\r\n        setVy(vy * -1);\r\n        setY(y + vy * -1);\r\n      }\r\n    }\r\n  };\r\n\r\n  const bounceWindow = (width: number, height: number) => {\r\n    const minX = radius;\r\n    const maxX = width - radius;\r\n    const minY = radius;\r\n    const maxY = height - radius;\r\n    const bounce = radius / 2;\r\n\r\n    if (x <= minX) {\r\n      setVx(vx => vx * -1);\r\n      setX(x => x + bounce);\r\n    }\r\n    if (x >= maxX) {\r\n      setVx(vx => vx * -1);\r\n      setX(x => x - bounce);\r\n    }\r\n    if (y <= minY) {\r\n      setVy(vy => vy * -1);\r\n      setY(y => y + bounce);\r\n    }\r\n    if (y >= maxY) {\r\n      setVy(vy => vy * -1);\r\n      setY(y => y - bounce);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!canvasRef.current) return;\r\n    const canvas = canvasRef.current;\r\n    const ctx = canvas.getContext('2d');\r\n\r\n    if (ctx) {\r\n      const canvasWidth = canvas.width;\r\n      const canvasHeight = canvas.height;\r\n      ctx.clearRect(0, 0, canvasWidth, canvasHeight);\r\n      // 직육면체 좌표\r\n      const rectWidth = Math.round(canvasWidth / 4);\r\n      const rectHeight = Math.round(canvasHeight / 24);\r\n      const rectX = Math.round(50 + canvasWidth / 4);\r\n      const rectY = Math.round(50 + canvasHeight / 2);\r\n      const rectMaxX = rectX + rectWidth;\r\n      const rectMaxY = rectY + rectHeight;\r\n\r\n      setX(x => x + vx);\r\n      setY(y => y + vy);\r\n\r\n      drawBlock({\r\n        rectWidth,\r\n        rectHeight,\r\n        rectX,\r\n        rectY,\r\n        rectMaxX,\r\n        rectMaxY,\r\n        ctx,\r\n      });\r\n      bounceBlock({ rectX, rectY, rectMaxX, rectMaxY });\r\n      bounceWindow(canvasWidth, canvasHeight);\r\n\r\n      ctx.fillStyle = '#123456';\r\n      ctx.beginPath();\r\n      ctx.arc(x, y, radius, 0, 2 * Math.PI);\r\n      ctx.fill();\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [frame]);\r\n\r\n  useLayoutEffect(() => {\r\n    if (!isPaused) {\r\n      let timerId: number;\r\n\r\n      const animate = () => {\r\n        setFrame(frame => frame + 1);\r\n\r\n        timerId = requestAnimationFrame(animate);\r\n      };\r\n\r\n      timerId = requestAnimationFrame(animate);\r\n      return () => cancelAnimationFrame(timerId);\r\n    }\r\n  }, [isPaused]);\r\n};\r\n","import { ChangeEvent, useRef, useState } from 'react';\r\nimport styles from './index.module.scss';\r\nimport classNames from 'classnames/bind';\r\nimport { useResize, useDrawBall } from './hook';\r\nimport DefaultButton from '../../components/DefaultButton';\r\nimport {\r\n  BsFillPlayFill,\r\n  BsFillPauseFill,\r\n  BsSpeedometer,\r\n  BsFillNodePlusFill,\r\n} from 'react-icons/bs';\r\n\r\nconst cx = classNames.bind(styles);\r\n\r\n// https://www.youtube.com/watch?v=hBTwJGZIrSo\r\n// https://dev.to/ptifur/animation-with-canvas-and-requestanimationframe-in-react-5ccj\r\n\r\nfunction WaveCanvas() {\r\n  // console.log('컴포넌트 렌더링');\r\n\r\n  const canvasRef = useRef<HTMLCanvasElement>(null);\r\n  const [speed, setSpeed] = useState(4);\r\n  const [radius, setRadius] = useState(35);\r\n  const [isPaused, setIsPaused] = useState(false);\r\n  const [closeOption, setCloseOption] = useState(true);\r\n\r\n  const onChangeSpeed = (e: ChangeEvent<HTMLInputElement>) =>\r\n    setSpeed(Number(e.target.value));\r\n  const onChangeRadius = (e: ChangeEvent<HTMLInputElement>) =>\r\n    setRadius(Number(e.target.value));\r\n\r\n  useResize(canvasRef);\r\n  useDrawBall({ canvasRef, isPaused, speed, radius });\r\n\r\n  return (\r\n    <div className={cx('wave_section')}>\r\n      <canvas ref={canvasRef}>지원하지 않는 브라우저입니다</canvas>\r\n      {closeOption ? (\r\n        <div className={cx('button_group')}>\r\n          <div\r\n            className={cx('play_button')}\r\n            onClick={() => setIsPaused(!isPaused)}\r\n          >\r\n            {isPaused ? <BsFillPlayFill /> : <BsFillPauseFill />}\r\n          </div>\r\n          <div className={cx('animation_option')}>\r\n            <BsSpeedometer />\r\n            &nbsp;{'속도(speed)'}\r\n          </div>\r\n          <input\r\n            type='range'\r\n            min='2'\r\n            max='6'\r\n            value={speed}\r\n            onChange={onChangeSpeed}\r\n          />\r\n          <div className={cx('animation_option')}>\r\n            <BsFillNodePlusFill />\r\n            &nbsp;{'크기(radius)'}\r\n          </div>\r\n          <input\r\n            type='range'\r\n            min='20'\r\n            max='50'\r\n            value={radius}\r\n            onChange={onChangeRadius}\r\n          />\r\n          <DefaultButton\r\n            name={'CLOSE'}\r\n            onClickButton={() => setCloseOption(prev => !prev)}\r\n            size={'large'}\r\n            color={'gray'}\r\n            fullWidth\r\n          />\r\n        </div>\r\n      ) : (\r\n        <div className={cx('button_group', 'close')}>\r\n          <DefaultButton\r\n            name={'+'}\r\n            onClickButton={() => setCloseOption(prev => !prev)}\r\n            size={'large'}\r\n            color={'gray'}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default WaveCanvas;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"color-blue\":\"#228be6\",\"color-pink\":\"#f06595\",\"color-gray\":\"#ccc\",\"color-froly\":\"#f26d6d\",\"color-concrete\":\"#f2f2f2\",\"wave_section\":\"BounceBall_wave_section__aND9y\",\"button_group\":\"BounceBall_button_group__ZIUq4\",\"close\":\"BounceBall_close__OHgLN\",\"play_button\":\"BounceBall_play_button__NmoKF\",\"animation_option\":\"BounceBall_animation_option__-5CAn\"};"],"names":["cx","classNames","styles","name","onClickButton","size","color","outline","fullWidth","onClick","className","useDrawBall","canvasRef","isPaused","speed","radius","useState","frame","setFrame","x","setX","y","setY","vx","setVx","vy","setVy","useEffect","current","canvas","ctx","getContext","canvasWidth","width","canvasHeight","height","clearRect","rectWidth","Math","round","rectHeight","rectX","rectY","rectMaxX","rectMaxY","fillStyle","beginPath","rect","fill","moveTo","lineTo","drawBlock","minX","maxX","minY","maxY","x1","abs","x2","y1","y2","min1","min","min2","shockRectSide","bounceBlock","bounce","bounceWindow","arc","PI","useLayoutEffect","timerId","requestAnimationFrame","animate","cancelAnimationFrame","useRef","setSpeed","setRadius","setIsPaused","closeOption","setCloseOption","resize","useCallback","clientWidth","clientHeight","scale","useResize","ref","type","max","value","onChange","e","Number","target","DefaultButton","prev"],"sourceRoot":""}