{"version":3,"file":"static/js/824.2d9c5264.chunk.js","mappings":"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","sources":["components/PagesTemplate.tsx","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","webpack://animation-playground/./src/pages/TypoGraphy/index.module.scss?45fe","components/DefaultButton.tsx","pages/TypoGraphy/TypoGraphyItem.tsx","pages/TypoGraphy/TypoGraphyList.tsx","pages/TypoGraphy/index.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport classNames from 'classnames/bind';\r\nimport styles from '../css/components.module.scss';\r\nimport { GrFormView, GrFormViewHide } from 'react-icons/gr';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst cx = classNames.bind(styles);\r\n\r\ntype PagesTemplateProps = {\r\n  children?: React.ReactNode;\r\n};\r\n\r\nfunction PagesTemplate({ children }: PagesTemplateProps) {\r\n  const [openEye, setOpenEye] = useState<boolean>(false);\r\n\r\n  return (\r\n    <div className={cx('container')}>\r\n      <section className={cx('main_contents')}>{children}</section>\r\n      <section className={cx('menu')}>\r\n        <aside className={cx('menu_icon')}>\r\n          <Link\r\n            to='/'\r\n            className={cx('outline', 'concrete')}\r\n            onMouseOver={() => setOpenEye(true)}\r\n            onMouseLeave={() => setOpenEye(false)}\r\n          >\r\n            {openEye ? <GrFormView /> : <GrFormViewHide />}\r\n          </Link>\r\n        </aside>\r\n        <aside>\r\n          <Link to='/typoGraphy' className={cx('typoGraphy', 'concrete')}>\r\n            TypoGraphy\r\n          </Link>\r\n        </aside>\r\n        <aside>...next</aside>\r\n      </section>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PagesTemplate;\r\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty.js\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}","// extracted by mini-css-extract-plugin\nexport default {\"color-blue\":\"#228be6\",\"color-pink\":\"#f06595\",\"color-gray\":\"#ccc\",\"color-froly\":\"#f26d6d\",\"color-concrete\":\"#f2f2f2\",\"typo_graphy-list\":\"TypoGraphy_typo_graphy-list__otXJ5\",\"typo_graphy-group\":\"TypoGraphy_typo_graphy-group__SgCyO\",\"typo_graphy\":\"TypoGraphy_typo_graphy__kkUl+\",\"draw\":\"TypoGraphy_draw__CR2pK\",\"typo_button_group\":\"TypoGraphy_typo_button_group__y9iXV\"};","import React from 'react';\r\nimport styles from '../css/components.module.scss';\r\nimport classNames from 'classnames/bind';\r\n\r\nconst cx = classNames.bind(styles);\r\n\r\nexport type restartBtnSize = 'large' | 'medium' | 'small';\r\nexport type restartBtnColor = 'blue' | 'pink' | 'gray' | 'froly' | 'concrete';\r\n\r\ntype DefaultButtonProps = {\r\n  name: string;\r\n  onClickButton: () => void;\r\n  size: restartBtnSize;\r\n  color: restartBtnColor;\r\n  fullWidth?: boolean;\r\n  outline?: boolean;\r\n};\r\n\r\nfunction DefaultButton({\r\n  name,\r\n  onClickButton,\r\n  size,\r\n  color,\r\n  outline,\r\n  fullWidth,\r\n}: DefaultButtonProps) {\r\n  return (\r\n    <button\r\n      onClick={onClickButton}\r\n      className={cx(size, color, { outline: outline, fullWidth: fullWidth })}\r\n    >\r\n      {name}\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default DefaultButton;\r\n","import React, { useRef } from 'react';\r\nimport classNames from 'classnames/bind';\r\nimport styles from './index.module.scss';\r\nimport DefaultButton from '../../components/DefaultButton';\r\nimport {\r\n  restartBtnColor,\r\n  restartBtnSize,\r\n} from '../../components/DefaultButton';\r\n\r\nconst cx = classNames.bind(styles);\r\n\r\ntype TypeGraphyItemProps = {\r\n  title: string;\r\n  fontSize: number;\r\n  stroke: string;\r\n  viewBox: string;\r\n  dy: string;\r\n  restartBtnSize: restartBtnSize;\r\n  restartBtnColor: restartBtnColor;\r\n  // onChangeSetting: (type: 'stroke' | 'size' | 'color', text: string) => void;\r\n  children?: React.ReactNode;\r\n};\r\n\r\nfunction TypoGraphyItem({\r\n  title,\r\n  fontSize,\r\n  stroke,\r\n  viewBox,\r\n  dy,\r\n  restartBtnSize,\r\n  restartBtnColor,\r\n  // onChangeSetting,\r\n  children,\r\n}: TypeGraphyItemProps) {\r\n  const textRef = useRef<SVGTextElement>(null);\r\n\r\n  const reAnimation = () => {\r\n    const element = textRef.current;\r\n    if (element) {\r\n      element.style.display = 'none';\r\n      setTimeout(() => {\r\n        element.style.display = 'block';\r\n      }, 0);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={cx('typo_graphy-group')}>\r\n      <svg viewBox={viewBox} className={cx('typo_graphy')}>\r\n        <title>{title}</title>\r\n        <g stroke='none' fill='none' fillRule='evenodd' fillOpacity='0'>\r\n          <text\r\n            id='typoText'\r\n            stroke={stroke}\r\n            fontFamily='PermanentMarker-Regular, Permanent Marker'\r\n            fontWeight='normal'\r\n            fontSize={fontSize}\r\n            textAnchor='middle'\r\n            x='50%'\r\n            y='50%'\r\n            dy={dy}\r\n            ref={textRef}\r\n            className={cx('typo-animation')}\r\n            // transform='translate(50%, 50%)'\r\n            // textDecoration='underline' underline | line-through\r\n          >\r\n            {title.split('').map((char: string, index: number) => (\r\n              <tspan key={title + char + index}>{char}</tspan>\r\n            ))}\r\n          </text>\r\n        </g>\r\n      </svg>\r\n      <div className={cx('typo_button_group')}>\r\n        <DefaultButton\r\n          name={`ReStart`}\r\n          onClickButton={reAnimation}\r\n          size={restartBtnSize}\r\n          color={restartBtnColor}\r\n          outline\r\n        />\r\n        {children}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TypoGraphyItem;\r\n","import React, { useState } from 'react';\r\nimport TypoGraphyItem from './TypoGraphyItem';\r\nimport styles from './index.module.scss';\r\nimport classNames from 'classnames/bind';\r\nimport DefaultButton, {\r\n  restartBtnColor,\r\n  restartBtnSize,\r\n} from '../../components/DefaultButton';\r\n\r\nconst cx = classNames.bind(styles);\r\nconst palette = ['blue', 'pink', 'gray', 'froly', 'concrete'];\r\nconst sizeSet = ['large', 'medium', 'small'];\r\n\r\ntype TypoListSettingsType = {\r\n  stroke: string;\r\n  size: restartBtnSize;\r\n  color: restartBtnColor;\r\n};\r\n\r\nfunction TypoGraphyList() {\r\n  const [typoListSettings, setTypoListSettings] =\r\n    useState<TypoListSettingsType>({\r\n      stroke: styles.colorBlue,\r\n      size: 'large',\r\n      color: 'blue',\r\n    });\r\n\r\n  const onChangeSetting = (type: 'stroke' | 'size' | 'color', text: string) =>\r\n    setTypoListSettings(prev => {\r\n      return { ...prev, [type]: text };\r\n    });\r\n\r\n  return (\r\n    <div className={cx('typo_graphy-list')}>\r\n      <TypoGraphyItem\r\n        title={`TypoGraphy@${typoListSettings.color} 야!`}\r\n        fontSize={100}\r\n        stroke={typoListSettings.stroke}\r\n        viewBox={'0 0 1260 150'}\r\n        dy={'5rem'}\r\n        restartBtnSize={typoListSettings.size}\r\n        restartBtnColor={typoListSettings.color}\r\n      >\r\n        {sizeSet.map(size => (\r\n          <DefaultButton\r\n            name={size}\r\n            onClickButton={() => onChangeSetting('size', size)}\r\n            size={typoListSettings.size}\r\n            color={typoListSettings.color}\r\n          />\r\n        ))}\r\n        {palette.map(color => (\r\n          <DefaultButton\r\n            name={color}\r\n            onClickButton={() => {\r\n              onChangeSetting('color', color);\r\n              onChangeSetting('stroke', styles[`color-${color}`]);\r\n            }}\r\n            size={typoListSettings.size}\r\n            color={typoListSettings.color}\r\n          />\r\n        ))}\r\n      </TypoGraphyItem>\r\n      <TypoGraphyItem\r\n        title={`TypoGraphy@Froly 야!`}\r\n        fontSize={75}\r\n        stroke={styles['color-froly']}\r\n        viewBox={'0 0 1260 150'}\r\n        dy={'5rem'}\r\n        restartBtnSize={'large'}\r\n        restartBtnColor={'froly'}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TypoGraphyList;\r\n","import React, { Suspense } from 'react';\r\nimport PagesTemplate from '../../components/PagesTemplate';\r\nimport TypoGraphyItem from './TypoGraphyItem';\r\nimport styles from './index.module.scss';\r\nimport TypoGraphyList from './TypoGraphyList';\r\n\r\nfunction TypoGraphy() {\r\n  return (\r\n    <Suspense fallback={<>Loading...</>}>\r\n      <PagesTemplate>\r\n        <TypoGraphyList />\r\n        {/* <TypoGraphyItem\r\n          title={`TypoGraphy@타이포그래피`}\r\n          fontSize={100}\r\n          stroke={styles.colorBlue}\r\n          viewBox={'0 0 1260 150'}\r\n          dy={'5rem'}\r\n          restartBtnSize={'large'}\r\n          restartBtnColor={'blue'}\r\n        /> */}\r\n      </PagesTemplate>\r\n    </Suspense>\r\n  );\r\n}\r\n\r\nexport default TypoGraphy;\r\n"],"names":["cx","classNames","styles","children","useState","openEye","setOpenEye","className","to","onMouseOver","onMouseLeave","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","name","onClickButton","size","color","outline","fullWidth","onClick","title","fontSize","stroke","viewBox","dy","restartBtnSize","restartBtnColor","textRef","useRef","fill","fillRule","fillOpacity","id","fontFamily","fontWeight","textAnchor","x","y","ref","split","map","char","index","element","current","style","display","setTimeout","palette","sizeSet","typoListSettings","setTypoListSettings","onChangeSetting","type","text","prev","Suspense","fallback","PagesTemplate"],"sourceRoot":""}