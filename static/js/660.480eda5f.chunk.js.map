{"version":3,"file":"static/js/660.480eda5f.chunk.js","mappings":"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","sources":["components/DefaultButton.tsx","components/PagesTemplate.tsx","pages/Drawing/DrawingCanvas.tsx","webpack://animation-playground/./src/pages/Drawing/index.module.scss?3ee0","pages/Drawing/index.tsx"],"sourcesContent":["import React from 'react';\r\nimport styles from '../css/components.module.scss';\r\nimport classNames from 'classnames/bind';\r\n\r\nconst cx = classNames.bind(styles);\r\n\r\nexport type restartBtnSize = 'large' | 'medium' | 'small';\r\nexport type restartBtnColor = 'blue' | 'pink' | 'gray' | 'froly' | 'concrete';\r\n\r\ntype DefaultButtonProps = {\r\n  name: string;\r\n  onClickButton: () => void;\r\n  size: restartBtnSize;\r\n  color: restartBtnColor;\r\n  fullWidth?: boolean;\r\n  outline?: boolean;\r\n};\r\n\r\nfunction DefaultButton({\r\n  name,\r\n  onClickButton,\r\n  size,\r\n  color,\r\n  outline,\r\n  fullWidth,\r\n}: DefaultButtonProps) {\r\n  return (\r\n    <button\r\n      onClick={onClickButton}\r\n      className={cx(size, color, { outline: outline, fullWidth: fullWidth })}\r\n    >\r\n      {name}\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default DefaultButton;\r\n","import React, { useState } from 'react';\r\nimport classNames from 'classnames/bind';\r\nimport styles from '../css/components.module.scss';\r\nimport { GrFormView, GrFormViewHide } from 'react-icons/gr';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst cx = classNames.bind(styles);\r\n\r\ntype PagesTemplateProps = {\r\n  children?: React.ReactNode;\r\n};\r\n\r\nfunction PagesTemplate({ children }: PagesTemplateProps) {\r\n  const [openEye, setOpenEye] = useState<boolean>(false);\r\n\r\n  return (\r\n    <div className={cx('container')}>\r\n      <section className={cx('main_contents')}>{children}</section>\r\n      <section className={cx('menu')}>\r\n        <aside className={cx('menu_icon')}>\r\n          <Link\r\n            to='/'\r\n            className={cx('outline', 'concrete')}\r\n            onMouseOver={() => setOpenEye(true)}\r\n            onMouseLeave={() => setOpenEye(false)}\r\n          >\r\n            {openEye ? <GrFormView /> : <GrFormViewHide />}\r\n          </Link>\r\n        </aside>\r\n        <aside>\r\n          <Link to='/typoGraphy' className={cx('concrete')}>\r\n            TypoGraphy\r\n          </Link>\r\n        </aside>\r\n        <aside>\r\n          <Link to='/drawing' className={cx('concrete')}>\r\n            Drawing\r\n          </Link>\r\n        </aside>\r\n        <aside>...next</aside>\r\n      </section>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PagesTemplate;\r\n","import classNames from 'classnames/bind';\r\nimport React, { useCallback, useEffect, useRef, useState } from 'react';\r\nimport DefaultButton from '../../components/DefaultButton';\r\nimport styles from './index.module.scss';\r\n\r\nconst cx = classNames.bind(styles);\r\n\r\ntype Coordinate = {\r\n  x: number;\r\n  y: number;\r\n};\r\n\r\nfunction DrawingCanvas() {\r\n  const [mousePosition, setMousePosition] = useState<Coordinate | undefined>(\r\n    undefined\r\n  );\r\n  const [isPainting, setIsPainting] = useState(false);\r\n  const canvasRef = useRef<HTMLCanvasElement>(null);\r\n\r\n  // 캔버스 크기 초기화\r\n  const resize = () => {\r\n    if (!canvasRef.current) return;\r\n    const canvas: HTMLCanvasElement = canvasRef.current;\r\n    const ctx = canvas.getContext('2d');\r\n    const pixelRatio = window.devicePixelRatio > 1 ? 2 : 1;\r\n\r\n    if (ctx) {\r\n      // canvas.width = document.body.clientWidth * pixelRatio;\r\n      // canvas.height = document.body.clientHeight * pixelRatio;\r\n      canvas.width = canvas.clientWidth * pixelRatio;\r\n      canvas.height = canvas.clientHeight * pixelRatio;\r\n      ctx.scale(pixelRatio, pixelRatio);\r\n    }\r\n  };\r\n\r\n  // 좌표 구하기\r\n  const getCoordinates = (event: MouseEvent): Coordinate | undefined => {\r\n    if (!canvasRef.current) return;\r\n    const canvas: HTMLCanvasElement = canvasRef.current;\r\n    return {\r\n      x: event.pageX - canvas.offsetLeft - 10,\r\n      y: event.pageY - canvas.offsetTop + 14,\r\n    };\r\n  };\r\n\r\n  // 선 그리기\r\n  const drawLine = (\r\n    originMousePosition: Coordinate,\r\n    newMousePosition: Coordinate\r\n  ) => {\r\n    if (!canvasRef.current) return;\r\n    const canvas: HTMLCanvasElement = canvasRef.current;\r\n    const ctx = canvas.getContext('2d');\r\n\r\n    if (ctx) {\r\n      ctx.strokeStyle = 'blue';\r\n      ctx.lineJoin = 'round';\r\n      ctx.lineWidth = 3;\r\n      ctx.beginPath();\r\n      ctx.moveTo(originMousePosition.x, originMousePosition.y);\r\n      ctx.lineTo(newMousePosition.x, newMousePosition.y);\r\n      ctx.closePath();\r\n      ctx.stroke();\r\n    }\r\n  };\r\n\r\n  // mouse painting\r\n  const startPaint = useCallback((event: MouseEvent) => {\r\n    const coordinates = getCoordinates(event);\r\n    // elementBlur()\r\n    if (coordinates) {\r\n      setIsPainting(true);\r\n      setMousePosition(coordinates);\r\n    }\r\n  }, []);\r\n  const paint = useCallback(\r\n    (event: MouseEvent) => {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n\r\n      if (isPainting) {\r\n        const newMousePosition = getCoordinates(event);\r\n        if (mousePosition && newMousePosition) {\r\n          drawLine(mousePosition, newMousePosition);\r\n          setMousePosition(newMousePosition);\r\n        }\r\n      }\r\n    },\r\n    [mousePosition, isPainting]\r\n  );\r\n  const endPaint = useCallback(() => setIsPainting(false), []);\r\n\r\n  // touch painting\r\n  const startTouch = useCallback((event: TouchEvent) => {\r\n    event.preventDefault();\r\n    // elementBlur()\r\n    if (!canvasRef.current) return;\r\n    const canvas: HTMLCanvasElement = canvasRef.current;\r\n    const touch = event.touches[0]; // 터치 좌표\r\n    const mouseEvent = new MouseEvent('mousedown', {\r\n      clientX: touch.clientX,\r\n      clientY: touch.clientY,\r\n    });\r\n    canvas.dispatchEvent(mouseEvent);\r\n  }, []);\r\n  const touch = useCallback((event: TouchEvent) => {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n    if (!canvasRef.current) return;\r\n\r\n    const canvas: HTMLCanvasElement = canvasRef.current;\r\n    const touch = event.touches[0];\r\n    const mouseEvent = new MouseEvent('mousemove', {\r\n      clientX: touch.clientX,\r\n      clientY: touch.clientY,\r\n    });\r\n    canvas.dispatchEvent(mouseEvent);\r\n  }, []);\r\n  const endTouch = useCallback((event: TouchEvent) => {\r\n    event.preventDefault();\r\n    if (!canvasRef.current) return;\r\n\r\n    const canvas: HTMLCanvasElement = canvasRef.current;\r\n    const mouseEvent = new MouseEvent('mouseup', {});\r\n    canvas.dispatchEvent(mouseEvent);\r\n  }, []);\r\n\r\n  // 페인팅 초기화\r\n  const clearPaint = () => {\r\n    if (!canvasRef.current) return;\r\n    const canvas: HTMLCanvasElement = canvasRef.current;\r\n    canvas.getContext('2d')!!.clearRect(0, 0, canvas.width, canvas.height);\r\n  };\r\n\r\n  // const elementBlur = () => {\r\n  //   (document.activeElement as HTMLElement).blur()\r\n  // }\r\n\r\n  // 캔버스 크기 초기화\r\n  useEffect(() => {\r\n    resize();\r\n  }, []);\r\n\r\n  // 이벤트 핸들링\r\n  useEffect(() => {\r\n    if (!canvasRef.current) return;\r\n    const canvas: HTMLCanvasElement = canvasRef.current;\r\n\r\n    canvas.addEventListener('mousedown', startPaint);\r\n    canvas.addEventListener('mousemove', paint);\r\n    canvas.addEventListener('mouseup', endPaint);\r\n    canvas.addEventListener('mouseleave', endPaint);\r\n\r\n    canvas.addEventListener('touchstart', startTouch);\r\n    canvas.addEventListener('touchmove', touch);\r\n    canvas.addEventListener('touchend', endTouch);\r\n    return () => {\r\n      canvas.removeEventListener('mousedown', startPaint);\r\n      canvas.removeEventListener('mousemove', paint);\r\n      canvas.removeEventListener('mouseup', endPaint);\r\n      canvas.removeEventListener('mouseleave', endPaint);\r\n\r\n      canvas.removeEventListener('touchstart', startTouch);\r\n      canvas.removeEventListener('touchmove', touch);\r\n      canvas.removeEventListener('touchend', endTouch);\r\n    };\r\n  }, [startPaint, paint, endPaint, startTouch, touch, endTouch]);\r\n\r\n  return (\r\n    <div className={cx('canvas_section')}>\r\n      <div className={cx('draw_button_group')}>\r\n        <DefaultButton\r\n          name={'Click or Touch'}\r\n          onClickButton={clearPaint}\r\n          size={'large'}\r\n          color={'blue'}\r\n        />\r\n      </div>\r\n      <canvas ref={canvasRef} className={cx('draw_canvas')} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DrawingCanvas;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"color-blue\":\"#228be6\",\"color-pink\":\"#f06595\",\"color-gray\":\"#ccc\",\"color-froly\":\"#f26d6d\",\"color-concrete\":\"#f2f2f2\",\"canvas_section\":\"Drawing_canvas_section__eUxKL\",\"draw_canvas\":\"Drawing_draw_canvas__RA6Pc\",\"draw_button_group\":\"Drawing_draw_button_group__0q71n\"};","import React, { Suspense } from 'react';\r\nimport PagesTemplate from '../../components/PagesTemplate';\r\nimport DrawingCanvas from './DrawingCanvas';\r\n\r\nfunction Drawing() {\r\n  return (\r\n    <Suspense fallback={<>Loading...</>}>\r\n      <PagesTemplate>\r\n        <DrawingCanvas />\r\n      </PagesTemplate>\r\n    </Suspense>\r\n  );\r\n}\r\n\r\nexport default Drawing;\r\n"],"names":["cx","classNames","styles","name","onClickButton","size","color","outline","fullWidth","onClick","className","children","useState","openEye","setOpenEye","to","onMouseOver","onMouseLeave","undefined","mousePosition","setMousePosition","isPainting","setIsPainting","canvasRef","useRef","getCoordinates","event","current","canvas","x","pageX","offsetLeft","y","pageY","offsetTop","startPaint","useCallback","coordinates","paint","preventDefault","stopPropagation","newMousePosition","originMousePosition","ctx","getContext","strokeStyle","lineJoin","lineWidth","beginPath","moveTo","lineTo","closePath","stroke","drawLine","endPaint","startTouch","touch","touches","mouseEvent","MouseEvent","clientX","clientY","dispatchEvent","endTouch","useEffect","pixelRatio","window","devicePixelRatio","width","clientWidth","height","clientHeight","scale","resize","addEventListener","removeEventListener","DefaultButton","clearRect","ref","Suspense","fallback","PagesTemplate"],"sourceRoot":""}